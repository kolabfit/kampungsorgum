---
import { getPermalink } from '~/utils/permalinks';
import Layout from '~/layouts/PageLayout.astro';
import LatestArticles from '~/components/widgets/LatestArticles.astro';

import Hero from '~/components/widgets/Hero.astro';

import { contentfulClient } from '~/lib/contentful';
import type { Asset, EntryFieldTypes } from 'contentful';

interface ProdukType {
  contentTypeId: string;
  fields: {
    idProduk: EntryFieldTypes.Text;
    namaProduk: EntryFieldTypes.Text;
    fotoProduk: EntryFieldTypes.AssetLink;
    deskripsiProduk: EntryFieldTypes.Text;
    hargaProduk: EntryFieldTypes.Text;
  };
}

const toolskit = await contentfulClient.getEntries<ProdukType>({
  content_type: 'produkToolskitType',
});

const olahan = await contentfulClient.getEntries<ProdukType>({
  content_type: 'produkOlahanType',
});

function limitWords(text: string, wordLimit: number = 15): string {
  const words = text.split(' ');
  if (words.length > wordLimit) {
    return words.slice(0, wordLimit).join(' ') + '...';
  }
  return text;
}

const toolskitItems = toolskit.items.map((item) => {
  const asset: Asset | undefined = toolskit.includes?.Asset?.find(
            (asset: Asset) => asset?.sys?.id === item?.fields?.fotoProduk?.sys?.id
          );

          // Safely access the image URL
          const imageURL: string | null = typeof asset?.fields?.file?.url === 'string' ? asset.fields.file.url : null;

  return {
    title: item.fields.namaProduk,
    description: limitWords(item.fields.deskripsiProduk, 15),
    href: getPermalink('/toolskit/' + item.fields.idProduk),
    image: imageURL
  };
});

const olahanItems = olahan.items.map((item) => {
  const asset: Asset | undefined = olahan.includes?.Asset?.find(
            (asset: Asset) => asset?.sys?.id === item?.fields?.fotoProduk?.sys?.id
          );

          // Safely access the image URL
          const imageURL: string | null = typeof asset?.fields?.file?.url === 'string' ? asset.fields.file.url : null;

  return {
    title: item.fields.namaProduk,
    description: limitWords(item.fields.deskripsiProduk, 15),
    href: getPermalink('/olahan/' + item.fields.idProduk),
    image: imageURL
  };
});

// Define the structure of the content type based on your provided fields
interface ProdukHalamanType {
  contentTypeId: string;
  fields: {
    judulHero: EntryFieldTypes.Text;
    subtitleHero: EntryFieldTypes.Text;
    judulToolskit: EntryFieldTypes.Text;
    deskripsiToolskit: EntryFieldTypes.Text;
    judulOlahan: EntryFieldTypes.Text;
    deskripsiOlahan: EntryFieldTypes.Text;
  };
}

const entriesType = await contentfulClient.getEntries<ProdukHalamanType>({
  content_type: 'produkType',
  limit: 1,
});

// Map the data to be used in the template
const profileEntry = entriesType.items[0]?.fields;

const judulHero = profileEntry?.judulHero;
const subtitleHero = profileEntry?.subtitleHero;
const judulToolskit = profileEntry?.judulToolskit;
const deskripsiToolskit = profileEntry?.deskripsiToolskit;
const judulOlahan = profileEntry?.judulOlahan;
const deskripsiOlahan = profileEntry?.deskripsiOlahan;

const metadata = {
  title: 'Produk',
};
---

<Layout metadata={metadata}>
  <!-- Hero2 Widget ******************* -->

  <Hero
    contentID='produkHeroType',
  >
    <Fragment slot="title">
      {judulHero}
    </Fragment>

    <Fragment slot="subtitle">
      {subtitleHero}
    </Fragment>

    <Fragment slot="bg">
      <div class="absolute inset-0 bg-blue-50 dark:bg-slate-800"></div>
    </Fragment>

    <!-- <Fragment slot="subtitle">
      <span class="hidden sm:inline">
        <span class="font-semibold">AstroWind</span> is a free, customizable and production-ready template for Astro 4.0
        + Tailwind CSS.</span
      >
      <span class="block mb-1 sm:hidden font-bold text-blue-600">AstroWind: Production-ready.</span>
      Suitable for Startups, Small Business, SaaS websites, Professional Portfolios, Marketing websites, Landing Pages &
      Blogs.
    </Fragment> -->
  </Hero>
  
  <!-- Articles Widget **************** -->

  <LatestArticles
    id="paket"
    title={judulToolskit}
    subtitle={deskripsiToolskit}
    buttonText="Lihat Lebih Lanjut"
    columns={4}
    items={[
      ...toolskitItems
    ]}
  >
    <Fragment slot="bg">
      <div class="absolute inset-0 bg-blue-50 dark:bg-slate-800"></div>
    </Fragment>
  </LatestArticles>
  
  <!-- Articles Widget **************** -->

  <LatestArticles
    id="olahan"
    title={judulOlahan}
    subtitle={deskripsiOlahan}
    buttonText="Lihat Lebih Lanjut"
    columns={4}
    items={[
      ...olahanItems
    ]}
  >
    <Fragment slot="bg">
      <div class="absolute inset-0 bg-blue-50 dark:bg-slate-800"></div>
    </Fragment>
  </LatestArticles>
</Layout>
