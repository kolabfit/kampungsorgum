---
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Headline from '~/components/ui/Headline.astro';
import { Icon } from 'astro-icon/components';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline = await Astro.slots.render('tagline'),
  items = [],
  columns = 6,
  defaultIcon,
  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;

const parameter = `grid grid-cols-6 sm:grid-cols-6 lg:grid-cols-6 gap-4 md:gap-6`;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-7xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline
    title={title}
    subtitle={subtitle}
    tagline={tagline}
    classes={classes?.headline as Record<string, string>}
  />

  <div class={parameter} style=`grid-template-columns=${columns}`>
    {items.map((item) => (
      <article class="rounded-lg backdrop-blur border border-[#ffffff29] bg-white dark:bg-slate-900 p-6 flex flex-col items-center">
        {item.image && <img src={item.image} alt={item.image.alt} class="w-full h-auto mb-4" />}
        {item.icon && <Icon name={item.icon || defaultIcon} class='mb-2 w-10 h-10 text-primary' />}
        <h3 class="text-lg font-bold mb-2">{item.title}</h3>
        <p class="text-sm text-muted mb-4">{item.description}</p>
        {item.href && (
          <a href={item.href} class="btn btn-primary" style="font-size: small;">
            Read More
          </a>
        )}
      </article>
    ))}
  </div>
</WidgetWrapper>
