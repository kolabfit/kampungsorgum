---
import { getPermalink } from '~/utils/permalinks';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import type { Widget } from '~/types';
import Button from '../ui/Button.astro';
import { contentfulClient } from '~/lib/contentful';
import type { Asset, EntryFieldTypes } from 'contentful';

export interface Props extends Widget {
  title?: string;
  linkText?: string;
  linkUrl?: string | URL;
  information?: string;
  count?: number;
}

const {
  linkText = 'View all posts',
  linkUrl = getPermalink('/edusorgum'),
  count = 4,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;


// Define the structure of the content type based on your provided fields
interface ProfileKampungSorgumType {
  contentTypeId: string;
  fields: {
    entryname: EntryFieldTypes.Text;
    juduledutiment: EntryFieldTypes.Text;
    captionedutiment: EntryFieldTypes.Text;
  };
}

const entriesType = await contentfulClient.getEntries<ProfileKampungSorgumType>({
  content_type: 'edutimentType',
  'fields.entryname': 'judulandcaption',
  limit: 1,
});

// Map the data to be used in the template
const profileEntry = entriesType.items[0]?.fields;

const juduledutiment = profileEntry?.juduledutiment;
const captionedutiment = profileEntry?.captionedutiment;
---

{
    <WidgetWrapper id={id} isDark={isDark} containerClass={classes?.container as string} bg={bg}>
      <div class="flex flex-col lg:justify-between lg:flex-row mb-8">
        {(
          <div class="md:max-w-sm">
            <h2
              class="text-3xl font-bold tracking-tight sm:text-4xl sm:leading-none group font-heading mb-2"
              set:html={juduledutiment}
            />
              <Button variant="link" href={linkUrl}>
                {' '}
                {linkText} Â»
              </Button>
          </div>
        )}

        {<p class="text-muted dark:text-slate-400 lg:text-sm lg:max-w-md" set:html={captionedutiment} />}
      </div>
    </WidgetWrapper>
    <Fragment />
}
